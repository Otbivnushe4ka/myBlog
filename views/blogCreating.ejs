<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>Bootstrap demo</title>
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
			crossorigin="anonymous"
		/>
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"
		/>
		<link rel="stylesheet" href="/styles/global.css" />
		<link rel="stylesheet" href="/styles/blogCreating.css" />
	</head>

	<body>
		<%- include('./components/navbar.ejs') %>

		<!-- Blogs container -->
		<div class="blogs">
			<!-- Blog Post Start -->
			<div class="card text-bg-dark col-md-4 col-10 mb-2">
				<!-- Blog User -->
				<div class="card-header position-relative d-flex">
					<!-- User name and image -->
					<div class="d-flex align-items-center" style="width: 50%;">
						<img
							src="<%= user.img %>"
							class="rounded-circle mr-2"
							alt="User Profile"
							style="width: 40px; height: 40px;"
						/>
						<h5 class="ms-2">
							<%= user.username %>
						</h5>
					</div>
					<!-- blog settings -->
					<div class="position-absolute end-0">
						<div class="dropdown">
							<button
								class="btn text-bg-dark"
								data-bs-toggle="dropdown"
							>
								<i class="bi bi-three-dots"></i>
							</button>
							<ul class="dropdown-menu dropdown-menu-dark">
								<select
									class="form-select text-bg-dark blog-status"
								>
									<option value="1" selected
										>Status: Public</option
									>
									<option value="2">Status: Private</option>
								</select>

								<li>
									<a
										class="dropdown-item text-danger"
										href="#"
										>Delete post</a
									>
								</li>
							</ul>
						</div>
					</div>
				</div>

				<!-- Blog text -->
				<div class="card-body">
					<div class="form-floating">
						<textarea
							class="blog-text form-control text-bg-dark"
							id="floatingTextarea"
							style="height: 200px;"
							minlength="1"
							maxlength="255"
						></textarea>
						<label for="floatingTextarea">Yours blog text</label>
					</div>
					<p class="card-text">
						<small><span id="letter-counter">0</span>/255</small>
					</p>
				</div>

				<!-- Post Image -->
				<div class="card-body">
					<div class="container py-5">
						<h2 class="mb-4">Download and preview image</h2>
						<input
							type="file"
							id="imageInput"
							class="form-control mb-3 text-bg-dark"
							accept="image/*"
							multiple
						/>
						<div
							class="image-preview-container"
							id="previewContainer"
						></div>
					</div>
				</div>

				<!-- Blog Post End -->
				<div class="card-footer d-flex">
					<!-- Like Icon -->
					<button href="#" class="btn text-bg-dark text-danger">
						<i class="bi bi-heart-fill"></i>0
					</button>
					<!-- Views Icon -->
					<a href="#" class="btn text-bg-dark text-info">
						<i class="bi bi-eye-fill"></i>0
					</a>
					<!-- Comments Icon -->
					<a href="#" class="btn text-bg-dark">
						<i class="bi bi-chat-dots-fill"></i>0
					</a>

					<div class="d-flex justify-content-end" style="width: 70%;">
						<button
							type="button"
							class="btn btn-success submit-btn"
						>
							Submit blog
						</button>
					</div>
				</div>
			</div>
		</div>
	</body>
	<script
		src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
		integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
		crossorigin="anonymous"
	></script>
	<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
		integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
		crossorigin="anonymous"
	></script>

	<script>
		// letter counter
		const blogText = document.querySelector(".blog-text");
		const letCount = document.querySelector("#letter-counter");

		// count letters
		blogText.addEventListener("input", charCounter);
		function charCounter() {
			const charCount = blogText.value.length;
			letCount.innerHTML = charCount;
			// make text red if text lenght = 255
			if (charCount === 255) {
				letCount.className = "text-danger";
			} else {
				letCount.className = "";
			}
		}

		// images preview
		let currentFiles = [];
		let newFiles = [];
		const previewContainer = document.getElementById("previewContainer");

		document
			.getElementById("imageInput")
			.addEventListener("change", function (e) {
				newFiles = e.target.files;
				updateFileList();
			});

		// update preview files list
		function updateFileList(fileList) {
			previewContainer.innerHTML = "";

			currentFiles.forEach((file, index) => showFile(file, index));

			Array.from(newFiles).forEach((file, index) => {
				if (file.type.startsWith("image/")) {
					currentFiles.push(file);
					showFile(file, index);
				}
			});
			newFiles = [];
		}

		// add file to files preview
		function showFile(file, index) {
			const reader = new FileReader();
			reader.onload = function (e) {
				const imgContainer = document.createElement("div");
				imgContainer.classList.add("image-preview");
				imgContainer.innerHTML += `
        <img src="${e.target.result}" alt="Image Preview">
        <button class="btn btn-sm btn-danger delete-btn" id="${index}">&times;</button>
        `;
				previewContainer.appendChild(imgContainer);

				imgContainer
					.querySelector(".delete-btn")
					.addEventListener("click", function () {
						removeFile(parseInt(this.id));
					});
			};
			reader.readAsDataURL(file);
		}

		// remove file from preview
		function removeFile(index) {
			currentFiles.splice(index, 1);
			updateFileList();
		}

		// query
		const blogStatus = document.querySelector(".blog-status");
		const blogTexts = document.querySelector(".blog-text");

		document
			.querySelector(".submit-btn")
			.addEventListener("click", function (e) {
				const status = blogStatus.value;
				const text = blogTexts.value;
				const images = currentFiles;

				query(status, text, images);
			});

		function query(status, text, images) {
			const xhttp = new XMLHttpRequest();
			const formData = new FormData();

			// add status and text
			formData.append("status", status);
			formData.append("text", text);

      // add images
      images.forEach(image => formData.append("images", image))

			xhttp.open("POST", "/blog/create");
			xhttp.send(formData);
		}
	</script>
</html>
